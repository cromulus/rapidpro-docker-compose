# nginx-proxy to nginx, to rapidpro
version: "3"
services:
  nginx:
    image: nginx
    links:
      - rapidpro
      - courier
      - mailroom
    volumes:
      - "./etc/nginx/conf.d/:/etc/nginx/conf.d/"
      - "./nginx/certs:/etc/nginx/certs"
      - sitestatic-volume:/rapidpro/sitestatic
    environment:
      - VIRTUAL_HOST=${RAPIDPRO_HOST:-localhost}
      - LETSENCRYPT_HOST=${RAPIDPRO_HOST:-localhost}
      - LETSENCRYPT_EMAIL=${RAPIDPRO_ADMIN_EMAIL:-admin@example.com}
      - LETSENCRYPT_TEST=${LETSENCRYPT_TEST:-true}
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
    volumes:
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - LETSENCRYPT_TEST=${LETSENCRYPT_TEST:-true}
  rapidpro:
    image: rapidpro:${RAPIDPRO_VERSION:-v5.4.13}
    build:
      context: ./rapidpro_build/rapidpro-docker
      args:
        - RAPIDPRO_VERSION=${RAPIDPRO_VERSION:-v5.4.13}
    depends_on:
      - redis
      - postgresql
      - elasticsearch
    volumes:
      - sitestatic-volume:/rapidpro/sitestatic
    links:
      - redis
      - postgresql
      - elasticsearch
      - mailroom
    environment:
      - DOMAIN_NAME=${RAPIDPRO_HOST:-localhost}
      - ALLOWED_HOSTS=${RAPIDPRO_HOST:-localhost}
      - TEMBA_HOST=${RAPIDPRO_HOST:-localhost}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-off}
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elastic:changeme@elasticsearch:9200
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - CLEAR_COMPRESSOR_CACHE=${CLEAR_COMPRESSOR_CACHE:-off}
      - MANAGEPY_COLLECTSTATIC=${MANAGEPY_COLLECTSTATIC:-off}
      - MANAGEPY_COMPRESS=${MANAGEPY_COMPRESS:-off}
      - MANAGEPY_INIT_DB=${MANAGEPY_INIT_DB:-off}
      - MANAGEPY_MIGRATE=${MANAGEPY_MIGRATE:-on}
      - MANAGEPY_IMPORT_GEOJSON=${MANAGEPY_IMPORT_GEOJSON:-off}
      - OSM_RELATION_IDS=${OSM_RELATION_IDS}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-changeme}
      - AWS_BUCKET_DOMAIN=${AWS_BUCKET_DOMAIN-:changeme}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-changeme}
      - AWS_STATIC=${AWS_STATIC:-False}
      - AWS_MEDIA=${AWS_MEDIA:-False}
      - AWS_QUERYSTRING_AUTH=${AWS_QUERYSTRING_AUTH:-False}
      - AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN}
      - AWS_QUERYSTRING_EXPIRE=${AWS_QUERYSTRING_EXPIRE:-31556952}
      - CDN_DOMAIN_NAME=${CDN_DOMAIN_NAME:-changeme}
      - EMAIL_HOST=${EMAIL_HOST:-example.com}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-admin@example.com}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-changeme}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-admin@example.com}
      - SEND_EMAILS=${SEND_EMAILS:-off}
      - SEND_MESSAGES=${SEND_MESSAGES:-off}
      - SEND_AIRTIME=${SEND_AIRTIME:-off}
      - SEND_CALLS=${SEND_CALLS:-off}
      - SEND_WEBHOOKS=${SEND_WEBHOOKS:-off}
      - DJANGO_COMPRESSOR=${DJANGO_COMPRESSOR:-off}
      - BRANDING_ALLOW_SIGNUPS=${BRANDING_ALLOW_SIGNUPS:-on}
      - BRANDING_API_LINK=${BRANDING_API_LINK}
      - BRANDING_LINK=${BRANDING_LINK}
      - BRANDING_SPLASH=${BRANDING_SPLASH}
      - IS_PROD=${IS_PROD:-off}
      - MAILROOM_URL='http://mailroom:8090'
      - MAILROOM_AUTH_TOKEN=${MAILROOM_AUTH_TOKEN:-changeme}
      - STORAGE_URL=${STORAGE_URL}
      - FLOW_FROM_EMAIL=${FLOW_FROM_EMAIL}
      - API_THROTTLE_V2=${API_THROTTLE_V2:-2500/hour}
      - API_THROTTLE_V2_CONTACTS=${API_THROTTLE_V2_CONTACTS:-2500/hour}
      - API_THROTTLE_V2_MESSAGES=${API_THROTTLE_V2_MESSAGES:-2500/hour}
      - API_THROTTLE_V2_RUNS=${API_THROTTLE_V2_RUNS:-2500/hour}
      - API_THROTTLE_V2_API=${API_THROTTLE_V2_API:-2500/hour}
      - API_THROTTLE_V2_BROADCASTS=${API_THROTTLE_V2_BROADCAST:-2500/hour}
  celery_base:
    image: rapidpro:${RAPIDPRO_VERSION:-v5.4.13}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - elasticsearch
      - mailroom
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elastic:changeme@elasticsearch:9200
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - SEND_EMAILS=${SEND_EMAILS:-off}
      - SEND_MESSAGES=${SEND_MESSAGES:-off}
      - SEND_AIRTIME=${SEND_AIRTIME:-off}
      - SEND_CALLS=${SEND_CALLS:-off}
      - SEND_WEBHOOKS=${SEND_WEBHOOKS:-off}
      - IS_PROD=${IS_PROD:-off}
      - API_THROTTLE_V2=${API_THROTTLE_V2:-2500/hour}
      - API_THROTTLE_V2_CONTACTS=${API_THROTTLE_V2_CONTACTS:-2500/hour}
      - API_THROTTLE_V2_MESSAGES=${API_THROTTLE_V2_MESSAGES:-2500/hour}
      - API_THROTTLE_V2_RUNS=${API_THROTTLE_V2_RUNS:-2500/hour}
      - API_THROTTLE_V2_API=${API_THROTTLE_V2_API:-2500/hour}
      - API_THROTTLE_V2_BROADCASTS=${API_THROTTLE_V2_BROADCAST:-2500/hour}
    command: ["/venv/bin/celery", "--beat", "--app=temba", "worker", "--loglevel=ERROR", "--queues=celery,flows"]
  celery_msgs:
    image: rapidpro:${RAPIDPRO_VERSION:-v5.4.13}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
      - elasticsearch
      - mailroom
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elastic:changeme@elasticsearch:9200
      - SECRET_KEY=${SECRET_KEY:-changeme}
      - SEND_EMAILS=${SEND_EMAILS:-off}
      - SEND_MESSAGES=${SEND_MESSAGES:-off}
      - SEND_AIRTIME=${SEND_AIRTIME:-off}
      - SEND_CALLS=${SEND_CALLS:-off}
      - SEND_WEBHOOKS=${SEND_WEBHOOKS:-off}
      - IS_PROD=${IS_PROD:-off}
      - API_THROTTLE_V2=${API_THROTTLE_V2:-2500/hour}
      - API_THROTTLE_V2_CONTACTS=${API_THROTTLE_V2_CONTACTS:-2500/hour}
      - API_THROTTLE_V2_MESSAGES=${API_THROTTLE_V2_MESSAGES:-2500/hour}
      - API_THROTTLE_V2_RUNS=${API_THROTTLE_V2_RUNS:-2500/hour}
      - API_THROTTLE_V2_API=${API_THROTTLE_V2_API:-2500/hour}
      - API_THROTTLE_V2_BROADCASTS=${API_THROTTLE_V2_BROADCAST:-2500/hour}
    command: ["/venv/bin/celery", "--app=temba", "worker", "--loglevel=ERROR", "--queues=msgs,handler"]
  redis:
    image: redis:alpine
  postgresql:
    image: mdillon/postgis:9.6
    environment:
      - POSTGRES_DB=rapidpro
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
    environment:
      - bootstrap.memory_lock=true
      - ES_HEAP_SIZE=512m
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
  rp-indexer:
    image: rp-indexer:${RP_INDEXER_VERSION:-5.4.0}
    build:
      context: ./rapidpro_build/rp-indexer-docker
      args:
        - RP_INDEXER_VERSION=${RP_INDEXER_VERSION:-5.4.0}
    depends_on:
     - rapidpro
    links:
      - postgresql
      - elasticsearch
    environment:
      - INDEXER_DB=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - INDEXER_ELASTIC_URL=http://elastic:changeme@elasticsearch:9200
  rp-archiver:
    image: rp-archiver:${RP_ARCHIVER_VERSION:-5.4.0}
    build:
      context: ./rapidpro_build/rp-archiver-docker
      args:
        - RP_ARCHIVER_VERSION=${RP_ARCHIVER_VERSION:-5.4.0}
    depends_on:
      - rapidpro
    links:
      - postgresql
    environment:
      - ARCHIVER_S3_BUCKET=${ARCHIVER_S3_BUCKET:-changeme}
      - ARCHIVER_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - ARCHIVER_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - ARCHIVER_DB=postgresql://postgres:postgres@postgresql/rapidpro?sslmode=disable
  mailroom:
    image: mailroom:${MAILROOM_VERSION:-5.4.4}
    build:
      context: ./rapidpro_build/mailroom-docker
      args:
        - MAILROOM_VERSION=${MAILROOM_VERSION:-5.4.4}
    links:
      - redis
      - postgresql
    environment:
      - MAILROOM_ADDRESS=0.0.0.0
      - MAILROOM_DB=postgres://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - MAILROOM_REDIS=redis://redis:6379/0
      - MAILROOM_SMTP_SERVER=${MAILROOM_SMTP_SERVER:-smtp://user%40password@server:port/?from=foo%40gmail.com}
      - MAILROOM_DOMAIN=${RAPIDPRO_HOST:-localhost}
      - MAILROOM_ATTACHMENT_DOMAIN=${RAPIDPRO_HOST:-localhost}
      - MAILROOM_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - MAILROOM_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - MAILROOM_S3_REGION=${AWS_S3_REGION_NAME:-changeme}
      - MAILROOM_S3_MEDIA_PREFIX=mailroom
      - MAILROOM_S3_MEDIA_BUCKET=${MAILROOM_S3_MEDIA_BUCKET:-mailroom}
      - MAILROOM_AUTH_TOKEN=${MAILROOM_AUTH_TOKEN:-changeme}
      - MAILROOM_LOG_LEVEL=${MAILROOM_LOG_LEVEL:-error}
  courier:
    image: courier:${COURIER_VERSION:-5.4.0}
    build:
      context: ./rapidpro_build/courier-docker
      args:
        - COURIER_VERSION=${COURIER_VERSION:-5.4.0}
    depends_on:
      - rapidpro
    links:
      - redis
      - postgresql
    environment:
      - COURIER_DOMAIN=${RAPIDPRO_HOST:-locahost}
      - COURIER_SPOOL_DIR=/tmp/courier/
      - COURIER_DB=postgres://postgres:postgres@postgresql/rapidpro?sslmode=disable
      - COURIER_REDIS=redis://redis:6379/0
      - COURIER_AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-changeme}
      - COURIER_AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-changeme}
      - COURIER_S3_REGION=${AWS_S3_REGION_NAME:-changeme}
      - COURIER_S3_MEDIA_PREFIX=courier
      - COURIER_S3_MEDIA_BUCKET=${COURIER_S3_MEDIA_BUCKET:-changeme}
      - COURIER_LOG_LEVEL=${COURIER_LOG_LEVEL:-error}
volumes:
  sitestatic-volume:
